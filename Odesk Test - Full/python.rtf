{\rtf1\adeflang1025\ansi\ansicpg1252\uc2\adeff31507\deff0\stshfdbch31505\stshfloch31506\stshfhich31506\stshfbi31507\deflang1033\deflangfe2052\themelang1033\themelangfe0\themelangcs0{\fonttbl{\f2\fbidi \fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f20\fbidi \fmodern\fcharset129\fprq2{\*\panose 020b0600000101010101}\'b1\'bc\'b8\'b2{\*\falt Gulim};}{\f34\fbidi \froman\fcharset1\fprq2{\*\panose 02040503050406030204}Cambria Math;}
{\f36\fbidi \fmodern\fcharset129\fprq2{\*\panose 020b0503020000020004}\'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}{\f38\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\f40\fbidi \fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f41\fbidi \fmodern\fcharset129\fprq2{\*\panose 020b0600000101010101}@\'b1\'bc\'b8\'b2;}
{\f42\fbidi \fmodern\fcharset129\fprq2{\*\panose 020b0503020000020004}@\'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}{\flomajor\f31500\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbmajor\f31501\fbidi \fmodern\fcharset129\fprq2{\*\panose 020b0503020000020004}\'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}{\fhimajor\f31502\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}
{\fbimajor\f31503\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\flominor\f31504\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\fdbminor\f31505\fbidi \fmodern\fcharset129\fprq2{\*\panose 020b0503020000020004}\'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}{\fhiminor\f31506\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}
{\fbiminor\f31507\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f63\fbidi \fmodern\fcharset238\fprq1 Courier New CE;}{\f64\fbidi \fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f66\fbidi \fmodern\fcharset161\fprq1 Courier New Greek;}{\f67\fbidi \fmodern\fcharset162\fprq1 Courier New Tur;}{\f68\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f69\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f70\fbidi \fmodern\fcharset186\fprq1 Courier New Baltic;}{\f71\fbidi \fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f245\fbidi \fmodern\fcharset0\fprq2 Gulim Western{\*\falt Gulim};}
{\f243\fbidi \fmodern\fcharset238\fprq2 Gulim CE{\*\falt Gulim};}{\f244\fbidi \fmodern\fcharset204\fprq2 Gulim Cyr{\*\falt Gulim};}{\f246\fbidi \fmodern\fcharset161\fprq2 Gulim Greek{\*\falt Gulim};}
{\f247\fbidi \fmodern\fcharset162\fprq2 Gulim Tur{\*\falt Gulim};}{\f250\fbidi \fmodern\fcharset186\fprq2 Gulim Baltic{\*\falt Gulim};}{\f405\fbidi \fmodern\fcharset0\fprq2 Malgun Gothic Western;}{\f423\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}
{\f424\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}{\f426\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\f427\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\f430\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\f431\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\f443\fbidi \fswiss\fcharset238\fprq2 Verdana CE;}{\f444\fbidi \fswiss\fcharset204\fprq2 Verdana Cyr;}{\f446\fbidi \fswiss\fcharset161\fprq2 Verdana Greek;}
{\f447\fbidi \fswiss\fcharset162\fprq2 Verdana Tur;}{\f450\fbidi \fswiss\fcharset186\fprq2 Verdana Baltic;}{\f451\fbidi \fswiss\fcharset163\fprq2 Verdana (Vietnamese);}{\f455\fbidi \fmodern\fcharset0\fprq2 @\'b1\'bc\'b8\'b2 Western;}
{\f453\fbidi \fmodern\fcharset238\fprq2 @\'b1\'bc\'b8\'b2 CE;}{\f454\fbidi \fmodern\fcharset204\fprq2 @\'b1\'bc\'b8\'b2 Cyr;}{\f456\fbidi \fmodern\fcharset161\fprq2 @\'b1\'bc\'b8\'b2 Greek;}{\f457\fbidi \fmodern\fcharset162\fprq2 @\'b1\'bc\'b8\'b2 Tur;}
{\f460\fbidi \fmodern\fcharset186\fprq2 @\'b1\'bc\'b8\'b2 Baltic;}{\f465\fbidi \fmodern\fcharset0\fprq2 @\'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1 Western;}{\flomajor\f31508\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\flomajor\f31509\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\flomajor\f31511\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flomajor\f31512\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\flomajor\f31513\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\flomajor\f31514\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flomajor\f31515\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\flomajor\f31516\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\fdbmajor\f31520\fbidi \fmodern\fcharset0\fprq2 Malgun Gothic Western;}{\fhimajor\f31528\fbidi \froman\fcharset238\fprq2 Cambria CE;}
{\fhimajor\f31529\fbidi \froman\fcharset204\fprq2 Cambria Cyr;}{\fhimajor\f31531\fbidi \froman\fcharset161\fprq2 Cambria Greek;}{\fhimajor\f31532\fbidi \froman\fcharset162\fprq2 Cambria Tur;}
{\fhimajor\f31535\fbidi \froman\fcharset186\fprq2 Cambria Baltic;}{\fhimajor\f31536\fbidi \froman\fcharset163\fprq2 Cambria (Vietnamese);}{\fbimajor\f31538\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}
{\fbimajor\f31539\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\fbimajor\f31541\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbimajor\f31542\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\fbimajor\f31543\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\fbimajor\f31544\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbimajor\f31545\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\fbimajor\f31546\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\flominor\f31548\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\flominor\f31549\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\flominor\f31551\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\flominor\f31552\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\flominor\f31553\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\flominor\f31554\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\flominor\f31555\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\flominor\f31556\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\fdbminor\f31560\fbidi \fmodern\fcharset0\fprq2 Malgun Gothic Western;}{\fhiminor\f31568\fbidi \fswiss\fcharset238\fprq2 Calibri CE;}{\fhiminor\f31569\fbidi \fswiss\fcharset204\fprq2 Calibri Cyr;}
{\fhiminor\f31571\fbidi \fswiss\fcharset161\fprq2 Calibri Greek;}{\fhiminor\f31572\fbidi \fswiss\fcharset162\fprq2 Calibri Tur;}{\fhiminor\f31575\fbidi \fswiss\fcharset186\fprq2 Calibri Baltic;}
{\fhiminor\f31576\fbidi \fswiss\fcharset163\fprq2 Calibri (Vietnamese);}{\fbiminor\f31578\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\fbiminor\f31579\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}
{\fbiminor\f31581\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\fbiminor\f31582\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}{\fbiminor\f31583\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\fbiminor\f31584\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\fbiminor\f31585\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}{\fbiminor\f31586\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\f43\fbidi \froman\fcharset238\fprq2 Times New Roman CE;}{\f44\fbidi \froman\fcharset204\fprq2 Times New Roman Cyr;}{\f46\fbidi \froman\fcharset161\fprq2 Times New Roman Greek;}{\f47\fbidi \froman\fcharset162\fprq2 Times New Roman Tur;}
{\f48\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f49\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f50\fbidi \froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f51\fbidi \froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red155\green0\blue211;\red0\green176\blue80;}
{\*\defchp \fs22\lang1033\langfe1042\loch\af31506\hich\af31506\dbch\af31505\langfenp1042 }{\*\defpap \ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 }\noqfpromote {\stylesheet{
\ql \li0\ri0\sa200\sl276\slmult1\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1042\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1042 
\snext0 \sqformat \spriority0 Normal;}{\*\cs10 \additive \ssemihidden \sunhideused \spriority1 Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\sa200\sl276\slmult1
\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af31507\afs22\alang1025 \ltrch\fcs0 \fs22\lang1033\langfe1042\loch\f31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1042 
\snext11 \ssemihidden \sunhideused \sqformat Normal Table;}}{\*\rsidtbl \rsid6576734}{\mmathPr\mmathFont34\mbrkBin0\mbrkBinSub0\msmallFrac0\mdispDef1\mlMargin0\mrMargin0\mdefJc1\mwrapIndent1440\mintLim0\mnaryLim1}{\info{\operator CNW}
{\creatim\yr2013\mo5\dy15\hr22\min46}{\revtim\yr2013\mo5\dy16\hr10\min49}{\version2}{\edmins722}{\nofpages18}{\nofwords3700}{\nofchars21090}{\nofcharsws24741}{\vern32859}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1440\margr1440\margt1701\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\trackmoves1\trackformatting1\donotembedsysfont0\relyonvml0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\horzdoc\dghspace120\dgvspace120\dghorigin1701
\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale140\rsidroot6576734 \fet0{\*\wgrffmtfilter 2450}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta \hich .}}
{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \hich .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta \hich .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta \hich )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang 
{\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \hich (}{\pntxta \hich )}}\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid6576734 \rtlch\fcs1 \af31507\afs22\alang1025 
\ltrch\fcs0 \fs22\lang1033\langfe1042\loch\af31506\hich\af31506\dbch\af31505\cgrid\langnp1033\langfenp1042 {\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 
\u-19495\'b5\'bf\u-16208\'bb\'ea\u-14896\'bf\'a1}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-15028\'be\'cb\u-17987\'b8\'b3\u-19768\'b4\'cf\u-19740\'b4\'d9}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 
\par 
\par \hich\af31506\dbch\af20\loch\f20 document.onclick = document.onmousedown = document.onselectstart = null 
\par 
\par \hich\af31506\dbch\af20\loch\f20 oDesk}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-15652\'bd\'c3\u-10792\'c7\'e8\u-14524\'c0\'bb}{\rtlch\fcs1 \af20\afs18 
\ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 
\loch\af20\hich\af31506\dbch\f20 \u-14640\'bf\'f8\u-10920\'c7\'cf\u-15652\'bd\'c3\u-19820\'b4\'c2}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 
\af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-14448\'c0\'da\u-15651\'bd\'c4\u-19228\'b5\'e9\u-14528\'c0\'ba}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 
\u-14476\'c0\'cc\u-12460\'c4\'da\u-19236\'b5\'e5\u-18052\'b8\'a6}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  chrome inspact}{\rtlch\fcs1 \af20\afs18 
\ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-13251\'c3\'a2\u-14896\'bf\'a1}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 
\u-17163\'ba\'b9\u-16212\'bb\'e7\u-10920\'c7\'cf\u-21280\'b0\'ed}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-15644\'bd\'c7\u-10871\'c7\'e0\u-15652\'bd\'c3\u-12124\'c5\'b0\u-17804\'b8\'e9\u-16100\'bc\'ad}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 
\u-15652\'bd\'c3\u-10792\'c7\'e8\u-12712\'c4\'a1\u-17804\'b8\'e9}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-15652\'bd\'c3\u-21500\'b0\'a3\u-14524\'c0\'bb}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 
\u-14328\'c0\'fd\u-14979\'be\'e0\u-10912\'c7\'d2\u-15848\'bc\'f6}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-14456\'c0\'d6\u-14516\'c0\'bd}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 
\par }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-14560\'c0\'af\u-10584\'c8\'bf\u-16079\'bc\'ba\u-14528\'c0\'ba}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 
\u-20300\'b3\'bb\u-21504\'b0\'a1}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-17367\'b9\'e6\u-20984\'b1\'dd}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 
\hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u-21376\'b0\'cb\u-16212\'bb\'e7}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \hich\af31506\dbch\af20\loch\f20  }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 
\u-10920\'c7\'cf\u-14848\'bf\'b4\u-14516\'c0\'bd}{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 
\par }{\rtlch\fcs1 \af20\afs18 \ltrch\fcs0 \fs18\lang1042\langfe1042\loch\af20\dbch\af20\langnp1042\insrsid6576734 \loch\af20\hich\af31506\dbch\f20 \u12622\'a4\'be\u12622\'a4\'be\u12622\'a4\'be}{\rtlch\fcs1 \af40\afs18 \ltrch\fcs0 
\fs18\lang1042\langfe1042\loch\af40\hich\af40\dbch\af20\langnp1042\insrsid6576734 
\par }\pard \ltrpar\ql \li0\ri0\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 1. Which of the following is correct about Python? (chk)
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. Python is a byte-code compiled programming language
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Python uses a virtual machine to run machine-abstracted instructions
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Python is an object-oriented language}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Python is a declarative programming language
\par \tab \hich\af2\dbch\af31505\loch\f2 e. All of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 2. Inheriting from a base class enables a custom class to use a few new capabilities, such as slots and properties. Which of the following is the base class of new-style datatypes?
\par \tab \hich\af2\dbch\af31505\loch\f2 a. b\hich\af2\dbch\af31505\loch\f2 ase
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. object}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. dict
\par \tab \hich\af2\dbch\af31505\loch\f2 d. custom
\par \tab \hich\af2\dbch\af31505\loch\f2 e. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 3. Which of the following statement/s is/are correct about lossy or lossless compression?
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Lossy compression allows you to reproduce something "pretty much like" the original data set
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Decompr\hich\af2\dbch\af31505\loch\f2 ession transformation for lossless compression can reproduce exactly the original data
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Most often lossy compression techniques are used for images, sound files, and video
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. All of the above}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 4. Writing to STDOUT and STDERR is fairly inflexible, and m\hich\af2\dbch\af31505\loch\f2 ost of the time the print statement accomplishes the same purpose more flexibly. How many arguments can a print statement handle?

\par \tab \hich\af2\dbch\af31505\loch\f2 a. 1
\par \tab \hich\af2\dbch\af31505\loch\f2 b. 2
\par \tab \hich\af2\dbch\af31505\loch\f2 c. 7
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. Any number}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 5. Which of the following functions can change the maximum level of recursion?
\par \tab \hich\af2\dbch\af31505\loch\f2 a. setmaxrec\hich\af2\dbch\af31505\loch\f2 ursion function in the sys module
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. setrecursionlimit function in the sys module}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. setmaximumrecursion function in the sys module
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 6. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2    >>> word = 'Help' + 'A'
\par \hich\af2\dbch\af31505\loch\f2    >>> word[2:]
\par \hich\af2\dbch\af31505\loch\f2   \hich\af2\dbch\af31505\loch\f2  Which of the following will be the output of the above code?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. lpA}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. He
\par \tab \hich\af2\dbch\af31505\loch\f2 c. pA
\par \tab \hich\af2\dbch\af31505\loch\f2 d. lp
\par 
\par \hich\af2\dbch\af31505\loch\f2 7. Read the following code:
\par \hich\af2\dbch\af31505\loch\f2    def approx(x):
\par \hich\af2\dbch\af31505\loch\f2       if hasattr(x,'__and__'):
\par \hich\af2\dbch\af31505\loch\f2          return x & ~0x0FL
\par \hich\af2\dbch\af31505\loch\f2       try:
\par \hich\af2\dbch\af31505\loch\f2          return (round(x.real,2)+round(x.imag,2)\hich\af2\dbch\af31505\loch\f2 *1j)
\par \hich\af2\dbch\af31505\loch\f2       exception AttributeError:
\par \hich\af2\dbch\af31505\loch\f2          return round(x,2)
\par \hich\af2\dbch\af31505\loch\f2    Which of the following lines is incorrect in the above code?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. def approx(x):
\par \tab \hich\af2\dbch\af31505\loch\f2 b. __and__
\par \tab \hich\af2\dbch\af31505\loch\f2 c. round(x.real,2)+round(x.imag,2)*1j
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. exception AttributeError:}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 e. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 8. Which of the following modules lets you check whether two files are identical, and whether two directories contain some identical files?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. dircomp
\par \tab \hich\af2\dbch\af31505\loch\f2 b. filecompare
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. filecmp}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. structcomp
\par 
\par \hich\af2\dbch\af31505\loch\f2 9. Which of the following system attributes keeps the integ\hich\af2\dbch\af31505\loch\f2 er of the largest supported code point for a Unicode character under the current configuration?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. sys.maxint
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. sys.maxunicode}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. sys.maxcode
\par \tab \hich\af2\dbch\af31505\loch\f2 d. sys.maxnumber
\par 
\par \hich\af2\dbch\af31505\loch\f2 10. Which of the following members of the object class compare two parameters? (chk)
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. \hich\af2\dbch\af31505\loch\f2 object.__eq__(self, other)
\par \tab \hich\af2\dbch\af31505\loch\f2 b. object.__ne__(self, other)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. object.__compare__(self, other)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. object.__equals__(self, other)
\par \tab \hich\af2\dbch\af31505\loch\f2 e. object.__co__(self, other)
\par \tab \hich\af2\dbch\af31505\loch\f2 f. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 11. While running an application, a user pressed the interrupt key (Ctrl \hich\af2\dbch\af31505\loch\f2 + C). Which of the following exceptions will occur?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. InterruptError
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. KeyboardInterrupt}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. KeyboardInterruptError
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 12. You need to implement an email management system. You want to receive and send the emails from your Python application. Which of the following protocols will be used for email implementation?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. telnetlib
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. smtplib}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. ftplib
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 13. Which of the following is the base class for new-style file objects?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. base
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf7\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. file}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. fileobject
\par \tab \hich\af2\dbch\af31505\loch\f2 d. filebase
\par 
\par \hich\af2\dbch\af31505\loch\f2 14. Read the following statement and state whether it is true or false:
\par \hich\af2\dbch\af31505\loch\f2     Strings and files provide a storage container for an unlim\hich\af2\dbch\af31505\loch\f2 ited amount of (textual) information that is directly structured only by the linear position of the bytes.
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. True}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. False
\par 
\par \hich\af2\dbch\af31505\loch\f2 15. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     Statement 1: The new-style class int already supports Bitwise AND, there is no need to im\hich\af2\dbch\af31505\loch\f2 plement it again in derived classes.
\par \hich\af2\dbch\af31505\loch\f2     Statement 2: With new-style classes, you refer to data values directly with 'myself'.
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is correct?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Statement 1 is true but statement 2 is false
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Statement 2 is true but statement 1 is false
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. Both statements are true}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Both statements are false
\par 
\par \hich\af2\dbch\af31505\loch\f2 16. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> import array
\par \hich\af2\dbch\af31505\loch\f2     >>> a = array.array('c','spam and eggs')
\par \hich\af2\dbch\af31505\loch\f2     >>> a[0] = 'S'
\par \hich\af2\dbch\af31505\loch\f2     >>> a[-4:] = array.array\hich\af2\dbch\af31505\loch\f2 ('c','toast')
\par \hich\af2\dbch\af31505\loch\f2     >>> print ''.join(a)
\par \hich\af2\dbch\af31505\loch\f2     Which of the following will be the output of the above code snippet?
\par \tab 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. Spam and toast}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. spam and toast
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Spam and eggs
\par \tab \hich\af2\dbch\af31505\loch\f2 d. spam and eggs
\par \tab \hich\af2\dbch\af31505\loch\f2 e. spamandtoast
\par \tab \hich\af2\dbch\af31505\loch\f2 f. spamandeggs
\par 
\par \hich\af2\dbch\af31505\loch\f2 17. The Python interpreter is very\hich\af2\dbch\af31505\loch\f2 
 open to introspection. You can examine and modify many aspects of the Python runtime environment. Which of the following modules is used to retrieve information about Python runtime?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. system
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. sys}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Runtime
\par \tab \hich\af2\dbch\af31505\loch\f2 d. env
\par 
\par \hich\af2\dbch\af31505\loch\f2 18. Read the following statemen\hich\af2\dbch\af31505\loch\f2 ts:
\par \hich\af2\dbch\af31505\loch\f2     Statement 1: The capabilities of an object are generally implemented by its "magic" methods, each named with leading and trailing double underscores.  
\par \hich\af2\dbch\af31505\loch\f2     Statement 2: A basic datatype is just an object with some well-optimized versions of the right collection of magic methods.
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is correct?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Statement 1 is true but statement 2 is false
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Statement 1 is false but statement \hich\af2\dbch\af31505\loch\f2 2 is true
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. Both statements are true}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Both statements are false
\par 
\par \hich\af2\dbch\af31505\loch\f2 19. You want to redirect the output of the print statement into an file-like object 'test'. Which of the following statements is achieving this?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 a. >>> print >> open('test','w'), "Pi: \hich\af2\dbch\af31505\loch\f2 %.3f" % 3.1415, 27+11}{\rtlch\fcs1 \af2 
\ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. >>> print 'test', "Pi: %.3f" % 3.1415, 27+11
\par \tab \hich\af2\dbch\af31505\loch\f2 c. >>> print open('test','w'), "Pi: %.3f" % 3.1415, 27+11
\par \tab \hich\af2\dbch\af31505\loch\f2 d. >>> print $$ open('test','w'), "Pi: %.3f" % 3.1415, 27+11
\par 
\par \hich\af2\dbch\af31505\loch\f2 20. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     Statement 1: Many string\hich\af2\dbch\af31505\loch\f2  module functions are now also available as string object methods. 
\par \hich\af2\dbch\af31505\loch\f2     Statement 2: To use string object methods, there is no need to import the string module.
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is correct?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Statement 1 is true but statement 2 is false
\par \tab \hich\af2\dbch\af31505\loch\f2 b. St\hich\af2\dbch\af31505\loch\f2 atement 2 is true but statement 1 is false
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. Both statements are true}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Both statements are false
\par 
\par \hich\af2\dbch\af31505\loch\f2 21. In Python, you can inherit from a built-in exception. Which of the following is the base exception class?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Exceptions
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. BaseException}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Exception
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Except
\par 
\par \hich\af2\dbch\af31505\loch\f2 22. What is the output of the following statement?
\par \hich\af2\dbch\af31505\loch\f2     >>> 1j * 1J
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. (j2)
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. (-1+0j)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. (1j2)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. (2+0j)
\par 
\par \hich\af2\dbch\af31505\loch\f2 23. Which of the following variables store parameters passed from outside?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. sys.param
\par \tab \hich\af2\dbch\af31505\loch\f2 b. sys.arg
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. sys.argv}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. s\hich\af2\dbch\af31505\loch\f2 ys.prm
\par 
\par \hich\af2\dbch\af31505\loch\f2 24. Which of the following is the correct prototype of the string.find() function?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. string.find(s, sub ,start ,end)
\par \tab \hich\af2\dbch\af31505\loch\f2 b. string.find(s, sub ,start [,end])
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. string.find(s, sub [,start [,end]])}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. string.find(s, sub [,start] ,end)
\par 
\par \hich\af2\dbch\af31505\loch\f2 25. What wi\hich\af2\dbch\af31505\loch\f2 ll be the output of the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> import string
\par \hich\af2\dbch\af31505\loch\f2     >>> s = 'little fox\\011jumps over a lazy dog'
\par \hich\af2\dbch\af31505\loch\f2     >>> string.expandtabs(tabsize=1, s=s)
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. little fox jumps over a lazy dog}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. little fox\\011jumps over a lazy dog
\par \tab \hich\af2\dbch\af31505\loch\f2 c. little fox    jumps over a lazy dog
\par \tab \hich\af2\dbch\af31505\loch\f2 d. little fox\\011 jumps over a lazy dog
\par 
\par \hich\af2\dbch\af31505\loch\f2 26. Python libraries provide a rich collection of datatypes. Which of the following modules is not a starting point for custom datatypes? (chk)
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. UserDict
\par \tab \hich\af2\dbch\af31505\loch\f2 b. UserList
\par \tab \hich\af2\dbch\af31505\loch\f2 c. \hich\af2\dbch\af31505\loch\f2 userString
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. UserTuple
\par \tab \hich\af2\dbch\af31505\loch\f2 e. UserInt}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 27. Which of the following statements are correct? (chk)
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. >>> 'str' 'ing'
\par \tab \hich\af2\dbch\af31505\loch\f2 b. >>>'str'.strip() + 'ing'}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. >>> 'str'.strip() 'ing'
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. >>> 'str' + 'ing'}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 28. Various email and news clients store messages in a varie\hich\af2\dbch\af31505\loch\f2 
ty of formats, many providing hierarchical and structured folders. Which of the following provides a uniform API for reading the messages stored in all the most popular folder formats?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. mailstruct
\par \tab \hich\af2\dbch\af31505\loch\f2 b. emailarch
\par \tab \hich\af2\dbch\af31505\loch\f2 c. emailfolders
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. mailbox}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 29. The most important element of the email package is the message. The email class provides the classes for messages in Python. Which of the following classes is used for message?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. email.Message
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. email.message.Message}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. email.messages
\par \tab \hich\af2\dbch\af31505\loch\f2 d. email.e\hich\af2\dbch\af31505\loch\f2 mailmessage
\par 
\par \hich\af2\dbch\af31505\loch\f2 30. Which of the following is the base language of Python?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Smalltalk
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. C}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. C++
\par \tab \hich\af2\dbch\af31505\loch\f2 d. All of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 31. Python is a platform independent language and it is available on different platforms. Which of the following is not related to Py\hich\af2\dbch\af31505\loch\f2 thon?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. DLL
\par \tab \hich\af2\dbch\af31505\loch\f2 b. COM
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Distributed Objects
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Networking
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 e. None of the above}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 32. Which of the following exceptions is raised while using sys.exit()?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. SysExit
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. SystemExit}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Exit
\par \tab \hich\af2\dbch\af31505\loch\f2 d. ExceptExit
\par 
\par \hich\af2\dbch\af31505\loch\f2 33. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> lst = ['spam','and','eggs']
\par \hich\af2\dbch\af31505\loch\f2     >>> lst[2] = 'toast'
\par \hich\af2\dbch\af31505\loch\f2     >>> print ''.join(lst)
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is the output of the above code snippet?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. spam and eggs
\par \tab \hich\af2\dbch\af31505\loch\f2 b. spamandeggs
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. spamandtoast}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. spam and toast
\par 
\par \hich\af2\dbch\af31505\loch\f2 34. Divide by zero is a very\hich\af2\dbch\af31505\loch\f2  common error. Which of the following handles this exception?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. DivideByZeroError
\par \tab \hich\af2\dbch\af31505\loch\f2 b. DivisionZeroError
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. ZeroDivisionError}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. DivisionError
\par 
\par \hich\af2\dbch\af31505\loch\f2 35. The Python standard library contains intermediate-level modules to support all the most popular internet\hich\af2\dbch\af31505\loch\f2 
 communication protocols. Which of the following is a valid module for Internet communication in Python?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. poplib
\par \tab \hich\af2\dbch\af31505\loch\f2 b. smtlib
\par \tab \hich\af2\dbch\af31505\loch\f2 c. ftplib
\par \tab \hich\af2\dbch\af31505\loch\f2 d. httplib
\par \tab \hich\af2\dbch\af31505\loch\f2 e. imaplib
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 f. All of the above}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 36. Which of the following functions modifies the list in place to indicate which items are directories, and which are plain files?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. dircache.listdir(path, lst)
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. dircache.annotate(path, lst)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. dircache.filter(path, lst)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. dircache.scan(path, lst\hich\af2\dbch\af31505\loch\f2 )
\par 
\par \hich\af2\dbch\af31505\loch\f2 37. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     Statement 1: A simple assignment statement binds a name into the current namespace, unless that name has been declared as global. 
\par \hich\af2\dbch\af31505\loch\f2     Statement 2: A name declared as global is bound to the global (module-level) na\hich\af2\dbch\af31505\loch\f2 mespace.
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is correct?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Statement 1 is true but statement 2 is false
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Statement 2 is true but statement 1 is false
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. Both statements are true}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Both statements are false
\par 
\par \hich\af2\dbch\af31505\loch\f2 38. Which of the following modules is used intern\hich\af2\dbch\af31505\loch\f2 ally to determine whether a path matches?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. dircmp
\par \tab \hich\af2\dbch\af31505\loch\f2 b. filecompare
\par \tab \hich\af2\dbch\af31505\loch\f2 c. fncmp
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. fnmatch}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 39. If a name has not been bound inside some accessible scope, how can it be dereferenced?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Through global namespace
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Through package.module
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Through normal dereference process
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. It cannot be dereferenced}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 40. The central concept in Python programming is that of a namespace. Each context (i.e., scope) in a Python program has a hierarchically organized collection of namespaces available to i\hich\af2\dbch\af31505\loch\f2 
t. Which of the following types of scopes can be used in namespaces?
\par \tab 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Builtin
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Global
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Local
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Nested
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 e. All of the above}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par 
\par \hich\af2\dbch\af31505\loch\f2 1.\tab Advanced Concepts\tab              \tab 75%
\par \hich\af2\dbch\af31505\loch\f2 2.\tab Common Modules\tab                   \tab 86%
\par \hich\af2\dbch\af31505\loch\f2 3.\tab Exception Handling\tab              \tab 100\hich\af2\dbch\af31505\loch\f2 %
\par \hich\af2\dbch\af31505\loch\f2 4.\tab Namespaces and Bindings\tab         \tab 75%
\par \hich\af2\dbch\af31505\loch\f2 5.\tab Object Class\tab                    \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 6.\tab Printing\tab                     \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 7.\tab Python Basics\tab                   \tab 57%
\par \hich\af2\dbch\af31505\loch\f2 8.\tab Python Programming Concepts\tab      \tab 60%
\par \hich\af2\dbch\af31505\loch\f2 9.\tab Python Web Programming\tab \tab \tab 75%
\par \hich\af2\dbch\af31505\loch\f2 10.\tab Text Processing\tab  \hich\af2\dbch\af31505\loch\f2                  \tab 75%
\par 
\par \hich\af2\dbch\af31505\loch\f2 41. Headers are passed with Internet calls. Which of the following exceptions occur if there is an error in a header?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. MultipartConversionError
\par \tab \hich\af2\dbch\af31505\loch\f2 b. HeaderParseError
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. HeaderError}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 42. Which of the following modules keep prior directory listings in the memory to avoid the need for a new call to the file system?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. sys}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. FileSys
\par \tab \hich\af2\dbch\af31505\loch\f2 c. dirsys
\par \tab \hich\af2\dbch\af31505\loch\f2 d. dircache
\par 
\par \hich\af2\dbch\af31505\loch\f2 43. In Python which of the following statements copy the contents of a list an\hich\af2\dbch\af31505\loch\f2 d not just a reference to the list?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. newlist = oldlist
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. newlist = oldlist[:]}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. newlist = oldlist(dummy)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 44. Which of the following statements imports every name in a module namespace into the current namespace?
\par \tab 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. >>> fro\hich\af2\dbch\af31505\loch\f2 m modname import All
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. >>> from modname import *}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. >>> from modname import ?
\par \tab \hich\af2\dbch\af31505\loch\f2 d. >>> from modname import All as *
\par 
\par \hich\af2\dbch\af31505\loch\f2 45. Which of the following types is correct for objects created by the built-in buffer() function?
\par \tab 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. types.BufferType}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. types.Buffer
\par \tab \hich\af2\dbch\af31505\loch\f2 c. types.TypeBuffer
\par \tab \hich\af2\dbch\af31505\loch\f2 d. types.BuffType
\par 
\par \hich\af2\dbch\af31505\loch\f2 46. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     Statement 1: The conditions used in 'while' and 'if' statements can contain only comparison operators.
\par \hich\af2\dbch\af31505\loch\f2     Statement 2: The operators 'is' and 'is not' compare \hich\af2\dbch\af31505\loch\f2 whether two objects are really the same object.
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is correct?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Statement 1 is true but statement 2 is false
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. Statement 1 is false but statement 2 is true}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Both statements are true
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Both statements are false
\par 
\par \hich\af2\dbch\af31505\loch\f2 47. What w\hich\af2\dbch\af31505\loch\f2 ill be the output of the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> import string
\par \hich\af2\dbch\af31505\loch\f2     >>> string.ljust(width=30,s="Mary had a little lamb")
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. 'Mary had a little lamb        '
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. 'Mary had a little lamb'
\par \tab \hich\af2\dbch\af31505\loch\f2 c. '        Mary had a little lamb'
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 48\hich\af2\dbch\af31505\loch\f2 . Which of the following is the correct prototype for the 'open' function of the file class in python 2.2+?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. open(fname [,mode [,buffering]])
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. open(fname [,buffering [,mode]])
\par \tab \hich\af2\dbch\af31505\loch\f2 c. open(fname [,mode])
\par \tab \hich\af2\dbch\af31505\loch\f2 d. open(fname,mode,buffering)
\par \tab \hich\af2\dbch\af31505\loch\f2 e. open(fname,buffering,mode)
\par \tab \hich\af2\dbch\af31505\loch\f2 f. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 49. Python 2.3+ includes a standard module that implements a set datatype. Which of the following statements is true about the set datatype?
\par \tab 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. A set is an unordered collection of hashable objects
\par \tab \hich\af2\dbch\af31505\loch\f2 b.\hich\af2\dbch\af31505\loch\f2  No object can occur in a set more than once
\par \tab \hich\af2\dbch\af31505\loch\f2 c. A set resembles a dict that has only keys but no values
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Sets utilize bitwise and Boolean syntax to perform basic set-theoretic operations
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 e. All of the above
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 50. Read the following code snippet:
\par \hich\af2\dbch\af31505\loch\f2     >>\hich\af2\dbch\af31505\loch\f2 > o1 = C()
\par \hich\af2\dbch\af31505\loch\f2     >>> o1.lst = [1,2,3]
\par \hich\af2\dbch\af31505\loch\f2     >>> o3 = copy.deepcopy(o1)
\par \hich\af2\dbch\af31505\loch\f2     >>> o1.lst.append(17)
\par \hich\af2\dbch\af31505\loch\f2     What will be the output of '>>> o3.lst' and '>>> o1.lst'?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. [1, 2, 3] and [1, 2, 3, 17]
\par \tab \hich\af2\dbch\af31505\loch\f2 b. [1, 2, 3, 17] and [1, 2, 3, 17]
\par \tab \hich\af2\dbch\af31505\loch\f2 c. [1, 2, 3] and [1, 2, 3]
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf18\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 d. \hich\af2\dbch\af31505\loch\f2 None of the above}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 

\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 51. Read the following statements in which nested filters are used:
\par \hich\af2\dbch\af31505\loch\f2     shortline = lambda line: len(line) < 25
\par \hich\af2\dbch\af31505\loch\f2     short_regvals = filter(shortline, (isRegDBVal, lines))
\par \hich\af2\dbch\af31505\loch\f2     Which of the following errors is present in the above code?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Nested filters are not allowed
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. filter function is missing for (isRegDBval, lines)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Function shortline should be in a bracket like filter(shortline), (isregDBval), lines)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 52. Examine the following prototype for the 'open' fu\hich\af2\dbch\af31505\loch\f2 nction of the file class in Python 2.2+:
\par \hich\af2\dbch\af31505\loch\f2     open(fname [,mode [,buffering]])
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is correct for the 'buffering' argument?
\par \tab 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. 0 for none
\par \tab \hich\af2\dbch\af31505\loch\f2 b. 1 for line oriented
\par \tab \hich\af2\dbch\af31505\loch\f2 c. An integer larger than 1 for number of bytes
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. All of the above}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 53. How do you refer to the null object in Python?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. none
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. None}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. null
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Null
\par 
\par \hich\af2\dbch\af31505\loch\f2 54. In Python, what is the default maximum level of recursion?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. 500
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. 1000}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. 10000
\par \tab \hich\af2\dbch\af31505\loch\f2 d. No default maximum level
\par 
\par \hich\af2\dbch\af31505\loch\f2 55. Which of the following statements is correct for the interpreter when it is in interactive mode? (chk)
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. commands are read from a tty}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. Signs (">>> ") for primary prompt}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Signs ("<<< ") for secondary prompt
\par 
\par \hich\af2\dbch\af31505\loch\f2 56. Declaring a function is simply t\hich\af2\dbch\af31505\loch\f2 he preferred way of describing an object and binding it to a name. Which of the following statements bind an "anonymous" function to a name? (chk)
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. add1 = lambda x,y: x+y
\par \tab \hich\af2\dbch\af31505\loch\f2 b. >>> def add2(x, y):
\par \tab \hich\af2\dbch\af31505\loch\f2    ... return x+y}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. add1 = anon x,y: x+y
\par \tab \hich\af2\dbch\af31505\loch\f2 d. All of th\hich\af2\dbch\af31505\loch\f2 e above
\par 
\par \hich\af2\dbch\af31505\loch\f2 57. Which of the following functions is used to send audio data via the Internet?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. email.MIMEAudio(audiodata [,subtype [,encoder [,**params]]])
\par \tab \hich\af2\dbch\af31505\loch\f2 b. email.SendAudio(audiodata [,subtype [,encoder [,**params]]])
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. email.MIMEAudio.MIMEAudio(audi\hich\af2\dbch\af31505\loch\f2 odata [,subtype [,encoder [,**params]]])}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. email.MIMEAudio.SendAudio(audiodata [,subtype [,encoder [,**params]]])
\par 
\par \hich\af2\dbch\af31505\loch\f2 58. Examine the following code:
\par \hich\af2\dbch\af31505\loch\f2     1 >>>class Int2(int):    
\par \hich\af2\dbch\af31505\loch\f2     2 ...     def __addition__(myself, j):
\par \hich\af2\dbch\af31505\loch\f2     3 ...         vals = map(int, \hich\af2\dbch\af31505\loch\f2 [approx(myself), approx(j)])
\par \hich\af2\dbch\af31505\loch\f2     4 ...         k = int.__add__(*vals)
\par \hich\af2\dbch\af31505\loch\f2     5 ...         return Int2(int.__add__(k, 0x0F))
\par \hich\af2\dbch\af31505\loch\f2     Which of the above lines have incorrect syntax? (chk)
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. 1
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. 2
\par \tab \hich\af2\dbch\af31505\loch\f2 c. 3}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. 4
\par \tab \hich\af2\dbch\af31505\loch\f2 e. 5
\par \tab \hich\af2\dbch\af31505\loch\f2 f. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 
59. It is possible to use encoding other than ASCII in Python source files. The best way to do it is to put one more special comment line right after the #! line to define the source file encoding. Which of the following is the correct statement to define
\hich\af2\dbch\af31505\loch\f2  \hich\af2\dbch\af31505\loch\f2 encoding?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. coding: iso-8859-15
\par \tab \hich\af2\dbch\af31505\loch\f2 b. # -*- iso-8859-15 -*-
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. # -*- coding: iso-8859-15 -*-
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 60. Object is the base class of new-style datatypes. Which of the following functions is not a member of the object class?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. object.__e\hich\af2\dbch\af31505\loch\f2 q__(self, other)
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. object.__notequal__(self, other)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. object.__repr__(self)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 1.\tab Advanced Concepts\tab                   \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 2.\tab Common Modules\tab                   \tab \tab 67%
\par \hich\af2\dbch\af31505\loch\f2 3.\tab Exception Handling\tab                   \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 4.\tab Namespaces and Bi\hich\af2\dbch\af31505\loch\f2 ndings\tab           \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 5.\tab Object Class\tab                   \tab \tab 75%
\par \hich\af2\dbch\af31505\loch\f2 6.\tab Printing\tab                   \tab \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 7.\tab Python Basics\tab                   \tab \tab 88%
\par \hich\af2\dbch\af31505\loch\f2 8.\tab Python Programming Concepts\tab        \tab 62%
\par \hich\af2\dbch\af31505\loch\f2 9.\tab Python Web Programming\tab             \tab 50%
\par \hich\af2\dbch\af31505\loch\f2 10.\tab Text Processing\tab \hich\af2\dbch\af31505\loch\f2                   \tab \tab 100%
\par 
\par \hich\af2\dbch\af31505\loch\f2 61. How many arguments can a print statement handle?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. One
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Any number of string arguments only
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Any number of numeric arguments only
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. Any number of string or numeric arguments}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 62. Function sys.getrefcount(obj) return\hich\af2\dbch\af31505\loch\f2 
s the number of references to the object obj. Which of the following is the correct value returned by this function?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. Total number of references}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. One higher than the total number of references
\par \tab \hich\af2\dbch\af31505\loch\f2 c. One lesser than the total number of references
\par \tab \hich\af2\dbch\af31505\loch\f2 d. D\hich\af2\dbch\af31505\loch\f2 ouble of the total number of references
\par 
\par \hich\af2\dbch\af31505\loch\f2 63. Read the following code snippet:
\par \hich\af2\dbch\af31505\loch\f2     >>> import copy
\par \hich\af2\dbch\af31505\loch\f2     >>> class C: pass
\par \hich\af2\dbch\af31505\loch\f2     ...
\par \hich\af2\dbch\af31505\loch\f2     >>> o1 = C()
\par \hich\af2\dbch\af31505\loch\f2     >>> o1.lst = [1,2,3]
\par \hich\af2\dbch\af31505\loch\f2     >>> o1.str = "spam"
\par \hich\af2\dbch\af31505\loch\f2     >>> o2 = copy.copy(o1)
\par \hich\af2\dbch\af31505\loch\f2     >>> o1.lst.append(17)
\par \hich\af2\dbch\af31505\loch\f2     >>> o1.str = 'eggs'
\par \hich\af2\dbch\af31505\loch\f2     What will be the result of '>>> o2.lst' and '>>> o2.str'?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. [1, 2, 3] and 'spam'
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. [1, 2, 3, 17] and 'spam'
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. [1, 2, 3] and 'eggs'
\par \tab \hich\af2\dbch\af31505\loch\f2 d. [1, 2, 3, 17] and 'eggs'
\par 
\par \hich\af2\dbch\af31505\loch\f2 64. The core text processing tasks in working with email are\hich\af2\dbch\af31505\loch\f2 
 parsing, modifying, and creating the actual messages. Which of the following modules deal with parsing and processing email messages?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. MimeWriter
\par \tab \hich\af2\dbch\af31505\loch\f2 b. mimify
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. Both a and b}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Neither a nor b
\par 
\par \hich\af2\dbch\af31505\loch\f2 65. Read the following code snippet
\par \hich\af2\dbch\af31505\loch\f2     import types, ex\hich\af2\dbch\af31505\loch\f2 ceptions
\par \hich\af2\dbch\af31505\loch\f2     def overloaded_get_text(o):
\par \hich\af2\dbch\af31505\loch\f2         if type(o) is type.FileType:
\par \hich\af2\dbch\af31505\loch\f2             text = o.read
\par \hich\af2\dbch\af31505\loch\f2         else:
\par \hich\af2\dbch\af31505\loch\f2             raise exceptions.TypeError
\par \hich\af2\dbch\af31505\loch\f2         return text
\par \hich\af2\dbch\af31505\loch\f2     Which of the following lines has incorrect syntax?<br>
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. if type(o) is t\hich\af2\dbch\af31505\loch\f2 ype.FileType:
\par \tab \hich\af2\dbch\af31505\loch\f2 b. text = o.read()
\par \tab \hich\af2\dbch\af31505\loch\f2 c. raise exceptions.TypeError
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \hich\af2\dbch\af31505\loch\f2 66. Which of the following are correctly using 'self'?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. self = 'spam'
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. object.__repr__(self)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. string.upper(self)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. All of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 67. Which of the following exceptions occurs while importing a module?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. ModuleError
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. ImportError}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. ImportModuleError
\par \tab \hich\af2\dbch\af31505\loch\f2 d. ReferenceError
\par 
\par \hich\af2\dbch\af31505\loch\f2 68. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> word = 'Help' + 'A'
\par \hich\af2\dbch\af31505\loch\f2     >>> '<' + word*5 + '>'
\par \hich\af2\dbch\af31505\loch\f2     Which of the fol\hich\af2\dbch\af31505\loch\f2 lowing will be the output of the above code snippet?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. '<HelpAHelpAHelpAHelpAHelpA>'}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 b. '<HelpA5>'
\par \tab \hich\af2\dbch\af31505\loch\f2 c. '<HelpA*5>'
\par \tab \hich\af2\dbch\af31505\loch\f2 d. An error
\par \tab \hich\af2\dbch\af31505\loch\f2 e. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 69. What will be the output of the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> letlist = ('a','B','Z','r','w')
\par \hich\af2\dbch\af31505\loch\f2     >>> for c in letlist: print c, # inserts spaces
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. aBZrw
\par \tab \hich\af2\dbch\af31505\loch\f2 b. a B Z r w
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. ...
\par \tab \hich\af2\dbch\af31505\loch\f2    a B Z r w}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 70. Object is the base class of new-style datatypes. Which of the following functions is not a member of the object class?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. object\hich\af2\dbch\af31505\loch\f2 .__eq__(self, other)
\par \tab \hich\af2\dbch\af31505\loch\f2 b. object.__ne__(self, other)
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. object.__nz__(self)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. object.__repr__(self)
\par \tab \hich\af2\dbch\af31505\loch\f2 e. None of the above
\par \hich\af2\dbch\af31505\loch\f2     
\par \hich\af2\dbch\af31505\loch\f2 71. You have a script file where no script and no arguments are given. Which of the following will be the value of sys.argv[0]?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. Empty string
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. 0
\par \tab \hich\af2\dbch\af31505\loch\f2 c. 1
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Garbage value
\par \tab \hich\af2\dbch\af31505\loch\f2 e. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 72. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     Statement 1: By default, a print statement adds a linefeed to the end of its output.
\par \hich\af2\dbch\af31505\loch\f2     Statement 2: You may eliminate the linefeed by adding a trailing comma to the statement.
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is correct?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Statement 1 is true but statement 2 is false
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Statement 1 is false but statement 2 is true
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. Both statements are t\hich\af2\dbch\af31505\loch\f2 rue}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Both statements are false
\par 
\par \hich\af2\dbch\af31505\loch\f2 73. The least sophisticated form of textual output in Python is writing to open files. In particular, which of the following streams can be used?
\par \tab 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. STDOUT
\par \tab \hich\af2\dbch\af31505\loch\f2 b. STDERR
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. STDPRN
\par \tab \hich\af2\dbch\af31505\loch\f2 d. STDFIL
\par 
\par \hich\af2\dbch\af31505\loch\f2 1.\tab Advanced Concepts\tab        \hich\af2\dbch\af31505\loch\f2            \tab \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 2.\tab Common Modules\tab                   \tab \tab \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 3.\tab Exception Handling\tab                   \tab \tab \tab 67%
\par \hich\af2\dbch\af31505\loch\f2 4.\tab Namespaces and Bindings\tab                   \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 5.\tab Object Class\tab                   \tab \tab \tab \tab 80%
\par \hich\af2\dbch\af31505\loch\f2 6.\tab Printing\tab                   \tab \tab \tab \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 7.\tab Python B\hich\af2\dbch\af31505\loch\f2 asics\tab                   \tab \tab \tab \tab 75%
\par \hich\af2\dbch\af31505\loch\f2 8.\tab Python Programming Concepts\tab                   \tab 75%
\par \hich\af2\dbch\af31505\loch\f2 9.\tab Python Web Programming\tab                   \tab \tab 100%
\par \hich\af2\dbch\af31505\loch\f2 10.\tab Text Processing\tab                   \tab \tab \tab \tab 83%
\par 
\par \hich\af2\dbch\af31505\loch\f2 74. Which of the following is a stored string.printable constant?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. string.digits
\par \tab \hich\af2\dbch\af31505\loch\f2 b. string.letters
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. string.punctuation
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. string.whitespace
\par \tab \hich\af2\dbch\af31505\loch\f2 e. All of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 75. One common way to test a capability in Python is to try to do something, and catch any exceptions that occur.
\par \hich\af2\dbch\af31505\loch\f2     Which of the following is the corre\hich\af2\dbch\af31505\loch\f2 ct mechanism of trapping an error?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. try:
\par \tab \hich\af2\dbch\af31505\loch\f2            code to be verified will come here
\par \tab \hich\af2\dbch\af31505\loch\f2    exception <except>:
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. try:
\par \tab \hich\af2\dbch\af31505\loch\f2            code to be verified will come here
\par \tab \hich\af2\dbch\af31505\loch\f2    except <exception>:}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. try:
\par \tab \hich\af2\dbch\af31505\loch\f2            code to be verified will come here
\par \tab \hich\af2\dbch\af31505\loch\f2    \hich\af2\dbch\af31505\loch\f2 exception:
\par \tab \hich\af2\dbch\af31505\loch\f2 d. try:
\par \tab \hich\af2\dbch\af31505\loch\f2            code to be verified will come here
\par \tab \hich\af2\dbch\af31505\loch\f2    exception <exception>:
\par 
\par \hich\af2\dbch\af31505\loch\f2 76. Sometimes, an object needs to be converted into string representation. Fortunately, the object class provides functionality for this. Which of the following \hich\af2\dbch\af31505\loch\f2 
returns a string representation of the object 'self'?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. object.__repr__(self)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. object.__string__(self)
\par \tab \hich\af2\dbch\af31505\loch\f2 c. object.__conv__(self)
\par \tab \hich\af2\dbch\af31505\loch\f2 d. object.__slz__(self)
\par 
\par \hich\af2\dbch\af31505\loch\f2 77. Which of the following are the main features of Python?
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 a. Platform Independence
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Extensible
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Object-oriented programming with multiple inheritance}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Written in Java
\par \tab \hich\af2\dbch\af31505\loch\f2 e. Overloading of common operators
\par \tab \hich\af2\dbch\af31505\loch\f2 f. All of the above}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \hich\af2\dbch\af31505\loch\f2 78. What will be the output of the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> import string
\par \hich\af2\dbch\af31505\loch\f2     >>> s = 'Mary\\\hich\af2\dbch\af31505\loch\f2 011had a little lamb'
\par \hich\af2\dbch\af31505\loch\f2     >>> print s
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Mary had a little lamb
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Mary\\011 had a little lamb
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. Mary\tab had a little lamb
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. Mary\\011had a little lamb
\par 
\par \hich\af2\dbch\af31505\loch\f2 79. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2     >>> import string
\par \hich\af2\dbch\af31505\loch\f2     >>> str = "Mary had a lamp in her Hand"
\par \hich\af2\dbch\af31505\loch\f2     >>> str = string.replace(str, 'ha', 'stan')
\par \hich\af2\dbch\af31505\loch\f2     >>> str
\par \hich\af2\dbch\af31505\loch\f2     Which of the following will be the output?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Mary had a lamp in her Hand
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. Mary stand a lamp in her Hand}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Mary had a lamp in her stannd
\par \tab \hich\af2\dbch\af31505\loch\f2 d. Mary stand a lamp in her stannd
\par 
\par \hich\af2\dbch\af31505\loch\f2 
80. You have different combinations of conditions. Programming a custom function for each combined condition can produce a glut of named functions. For conditions that should be jointly satisfied, you want to nest several filters within each other. Which 
\hich\af2\dbch\af31505\loch\f2 o\hich\af2\dbch\af31505\loch\f2 f the following statements does it correctly?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. short_regvals = filter(shortline,(isRegDBVal, lines))
\par \tab \hich\af2\dbch\af31505\loch\f2 b. short_regvals = filter(filter(isRegDBVal, lines),shortline)
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. short_regvals = filter(shortline, filter(isRegDBVal, lines))}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 81. You want to remove an item from a list by giving the index. Which of the following statements will you use?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. remove listname[index]
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. del listname[index]
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. kill listname[index]
\par \tab \hich\af2\dbch\af31505\loch\f2 d. None of the above
\par 
\par \hich\af2\dbch\af31505\loch\f2 82. Which of the following types is correct\hich\af2\dbch\af31505\loch\f2  for instances of user-defined classes?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. types.Instance
\par \tab \hich\af2\dbch\af31505\loch\f2 b. types.InsType
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. types.InstanceType
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. types.TypeInstance
\par 
\par \hich\af2\dbch\af31505\loch\f2 83. Data compression is widely used in a variety of programming contexts. All popular operating systems and programming languages h\hich\af2\dbch\af31505\loch\f2 
ave numerous tools and libraries for implementing data compression of various sorts. One of the compression styles is 'lossless compression'. Which of the following is correct about 'lossless compression'?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. Allows for far more compact data representati\hich\af2\dbch\af31505\loch\f2 ons than lossy compression techniques
\par \tab \hich\af2\dbch\af31505\loch\f2 b. Decompression transformation for lossless compression can reproduce exactly the original data
\par \tab \hich\af2\dbch\af31505\loch\f2 c. Most often lossless compression techniques are used for images, sound files, and video
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf6\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 d. Allows you to reproduce s\hich\af2\dbch\af31505\loch\f2 omething "pretty much like" the original data set
\par 
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 \hich\af2\dbch\af31505\loch\f2 84. What will be the output of the following statement:
\par \hich\af2\dbch\af31505\loch\f2     >>> "ab123".islower(), '123'.islower(), 'Ab123'.islower()
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. (True, True, False)
\par \tab \hich\af2\dbch\af31505\loch\f2 b. (True, False, True)
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 c. (True, False, False)}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 d. (False, F\hich\af2\dbch\af31505\loch\f2 alse, False)
\par 
\par \hich\af2\dbch\af31505\loch\f2 85. Read the following statements:
\par \hich\af2\dbch\af31505\loch\f2    >>> word = 'Help' + 'A'
\par \hich\af2\dbch\af31505\loch\f2    >>> word[2:]
\par \hich\af2\dbch\af31505\loch\f2    >>> word[:2]
\par \hich\af2\dbch\af31505\loch\f2    Which of the following will be the output of the second print code?
\par 
\par \tab \hich\af2\dbch\af31505\loch\f2 a. lpA
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\cf17\insrsid6576734 \tab \hich\af2\dbch\af31505\loch\f2 b. He}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid6576734 
\par \tab \hich\af2\dbch\af31505\loch\f2 c. pA
\par \tab \hich\af2\dbch\af31505\loch\f2 d. lp
\par 
\par }{\*\themedata 504b030414000600080000002100828abc13fa0000001c020000130000005b436f6e74656e745f54797065735d2e786d6cac91cb6ac3301045f785fe83d0b6d8
72ba28a5d8cea249777d2cd20f18e4b12d6a8f843409c9df77ecb850ba082d74231062ce997b55ae8fe3a00e1893f354e9555e6885647de3a8abf4fbee29bbd7
2a3150038327acf409935ed7d757e5ee14302999a654e99e393c18936c8f23a4dc072479697d1c81e51a3b13c07e4087e6b628ee8cf5c4489cf1c4d075f92a0b
44d7a07a83c82f308ac7b0a0f0fbf90c2480980b58abc733615aa2d210c2e02cb04430076a7ee833dfb6ce62e3ed7e14693e8317d8cd0433bf5c60f53fea2fe7
065bd80facb647e9e25c7fc421fd2ddb526b2e9373fed4bb902e182e97b7b461e6bfad3f010000ffff0300504b030414000600080000002100a5d6a7e7c00000
00360100000b0000005f72656c732f2e72656c73848fcf6ac3300c87ef85bd83d17d51d2c31825762fa590432fa37d00e1287f68221bdb1bebdb4fc7060abb08
84a4eff7a93dfeae8bf9e194e720169aaa06c3e2433fcb68e1763dbf7f82c985a4a725085b787086a37bdbb55fbc50d1a33ccd311ba548b63095120f88d94fbc
52ae4264d1c910d24a45db3462247fa791715fd71f989e19e0364cd3f51652d73760ae8fa8c9ffb3c330cc9e4fc17faf2ce545046e37944c69e462a1a82fe353
bd90a865aad41ed0b5b8f9d6fd010000ffff0300504b0304140006000800000021006b799616830000008a0000001c0000007468656d652f7468656d652f7468
656d654d616e616765722e786d6c0ccc4d0ac3201040e17da17790d93763bb284562b2cbaebbf600439c1a41c7a0d29fdbd7e5e38337cedf14d59b4b0d592c9c
070d8a65cd2e88b7f07c2ca71ba8da481cc52c6ce1c715e6e97818c9b48d13df49c873517d23d59085adb5dd20d6b52bd521ef2cdd5eb9246a3d8b4757e8d3f7
29e245eb2b260a0238fd010000ffff0300504b03041400060008000000210096b5ade296060000501b0000160000007468656d652f7468656d652f7468656d65
312e786d6cec594f6fdb3614bf0fd87720746f6327761a07758ad8b19b2d4d1bc46e871e698996d850a240d2497d1bdae38001c3ba618715d86d87615b8116d8
a5fb34d93a6c1dd0afb0475292c5585e9236d88aad3e2412f9e3fbff1e1fa9abd7eec70c1d1221294fda5efd72cd4324f1794093b0eddd1ef62fad79482a9c04
98f184b4bd2991deb58df7dfbb8ad755446282607d22d771db8b944ad79796a40fc3585ee62949606ecc458c15bc8a702910f808e8c66c69b9565b5d8a314d3c
94e018c8de1a8fa94fd05093f43672e23d06af89927ac06762a049136785c10607758d9053d965021d62d6f6804fc08f86e4bef210c352c144dbab999fb7b471
7509af678b985ab0b6b4ae6f7ed9ba6c4170b06c788a705430adf71bad2b5b057d03606a1ed7ebf5babd7a41cf00b0ef83a6569632cd467faddec9699640f671
9e76b7d6ac355c7c89feca9cccad4ea7d36c65b258a206641f1b73f8b5da6a6373d9c11b90c537e7f08dce66b7bbeae00dc8e257e7f0fd2badd5868b37a088d1
e4600ead1ddaef67d40bc898b3ed4af81ac0d76a197c86826828a24bb318f3442d8ab518dfe3a20f000d6458d104a9694ac6d88728eee2782428d60cf03ac1a5
193be4cbb921cd0b495fd054b5bd0f530c1931a3f7eaf9f7af9e3f45c70f9e1d3ff8e9f8e1c3e3073f5a42ceaa6d9c84e5552fbffdeccfc71fa33f9e7ef3f2d1
17d57859c6fffac327bffcfc793510d26726ce8b2f9ffcf6ecc98baf3efdfdbb4715f04d814765f890c644a29be408edf3181433567125272371be15c308d3f2
8acd249438c19a4b05fd9e8a1cf4cd296699771c393ac4b5e01d01e5a30a787d72cf1178108989a2159c77a2d801ee72ce3a5c545a6147f32a99793849c26ae6
6252c6ed637c58c5bb8b13c7bfbd490a75330f4b47f16e441c31f7184e140e494214d273fc80900aedee52ead87597fa824b3e56e82e451d4c2b4d32a423279a
668bb6690c7e9956e90cfe766cb37b077538abd27a8b1cba48c80acc2a841f12e698f13a9e281c57911ce298950d7e03aba84ac8c154f8655c4f2af074481847
bd804859b5e696007d4b4edfc150b12addbecba6b18b148a1e54d1bc81392f23b7f84137c2715a851dd0242a633f900710a218ed715505dfe56e86e877f0034e
16bafb0e258ebb4faf06b769e888340b103d3311da9750aa9d0a1cd3e4efca31a3508f6d0c5c5c398602f8e2ebc71591f5b616e24dd893aa3261fb44f95d843b
5974bb5c04f4edafb95b7892ec1108f3f98de75dc97d5772bdff7cc95d94cf672db4b3da0a6557f70db629362d72bcb0431e53c6066acac80d699a6409fb44d0
8741bdce9c0e4971624a2378cceaba830b05366b90e0ea23aaa241845368b0eb9e2612ca8c742851ca251ceccc70256d8d87265dd96361531f186c3d9058edf2
c00eafe8e1fc5c509031bb4d680e9f39a3154de0accc56ae644441edd76156d7429d995bdd88664a9dc3ad50197c38af1a0c16d684060441db02565e85f3b966
0d0713cc48a0ed6ef7dedc2dc60b17e92219e180643ed27acffba86e9c94c78ab90980d8a9f0913ee49d62b512b79626fb06dccee2a432bbc60276b9f7dec44b
7904cfbca4f3f6443ab2a49c9c2c41476dafd55c6e7ac8c769db1bc399161ee314bc2e75cf8759081743be1236ec4f4d6693e5336fb672c5dc24a8c33585b5fb
9cc24e1d4885545b58463634cc5416022cd19cacfccb4d30eb45296023fd35a458598360f8d7a4003bbaae25e331f155d9d9a5116d3bfb9a95523e51440ca2e0
088dd844ec6370bf0e55d027a012ae264c45d02f708fa6ad6da6dce29c255df9f6cae0ec38666984b372ab5334cf640b37795cc860de4ae2816e95b21be5ceaf
8a49f90b52a51cc6ff3355f47e0237052b81f6800fd7b802239daf6d8f0b1571a8426944fdbe80c6c1d40e8816b88b8569082ab84c36ff0539d4ff6dce591a26
ade1c0a7f669880485fd484582903d284b26fa4e2156cff62e4b9265844c4495c495a9157b440e091bea1ab8aaf7760f4510eaa69a6465c0e04ec69ffb9e65d0
28d44d4e39df9c1a52ecbd3607fee9cec7263328e5d661d3d0e4f62f44acd855ed7ab33cdf7bcb8ae889599bd5c8b3029895b6825696f6af29c239b75a5bb1e6
345e6ee6c28117e73586c1a2214ae1be07e93fb0ff51e133fb65426fa843be0fb515c187064d0cc206a2fa926d3c902e907670048d931db4c1a44959d366ad93
b65abe595f70a75bf03d616c2dd959fc7d4e6317cd99cbcec9c58b34766661c7d6766ca1a9c1b327531486c6f941c638c67cd22a7f75e2a37be0e82db8df9f30
254d30c1372581a1f51c983c80e4b71ccdd28dbf000000ffff0300504b0304140006000800000021000dd1909fb60000001b010000270000007468656d652f74
68656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73848f4d0ac2301484f78277086f6fd3ba109126dd88d0add40384e4350d363f24
51eced0dae2c082e8761be9969bb979dc9136332de3168aa1a083ae995719ac16db8ec8e4052164e89d93b64b060828e6f37ed1567914b284d262452282e3198
720e274a939cd08a54f980ae38a38f56e422a3a641c8bbd048f7757da0f19b017cc524bd62107bd5001996509affb3fd381a89672f1f165dfe514173d9850528
a2c6cce0239baa4c04ca5bbabac4df000000ffff0300504b01022d0014000600080000002100828abc13fa0000001c0200001300000000000000000000000000
000000005b436f6e74656e745f54797065735d2e786d6c504b01022d0014000600080000002100a5d6a7e7c0000000360100000b000000000000000000000000
002b0100005f72656c732f2e72656c73504b01022d00140006000800000021006b799616830000008a0000001c00000000000000000000000000140200007468
656d652f7468656d652f7468656d654d616e616765722e786d6c504b01022d001400060008000000210096b5ade296060000501b000016000000000000000000
00000000d10200007468656d652f7468656d652f7468656d65312e786d6c504b01022d00140006000800000021000dd1909fb60000001b010000270000000000
00000000000000009b0900007468656d652f7468656d652f5f72656c732f7468656d654d616e616765722e786d6c2e72656c73504b050600000000050005005d010000960a00000000}
{\*\colorschememapping 3c3f786d6c2076657273696f6e3d22312e302220656e636f64696e673d225554462d3822207374616e64616c6f6e653d22796573223f3e0d0a3c613a636c724d
617020786d6c6e733a613d22687474703a2f2f736368656d61732e6f70656e786d6c666f726d6174732e6f72672f64726177696e676d6c2f323030362f6d6169
6e22206267313d226c743122207478313d22646b3122206267323d226c743222207478323d22646b322220616363656e74313d22616363656e74312220616363
656e74323d22616363656e74322220616363656e74333d22616363656e74332220616363656e74343d22616363656e74342220616363656e74353d22616363656e74352220616363656e74363d22616363656e74362220686c696e6b3d22686c696e6b2220666f6c486c696e6b3d22666f6c486c696e6b222f3e}
{\*\latentstyles\lsdstimax267\lsdlockeddef0\lsdsemihiddendef1\lsdunhideuseddef1\lsdqformatdef0\lsdprioritydef99{\lsdlockedexcept \lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority0 \lsdlocked0 Normal;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority9 \lsdlocked0 heading 1;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 2;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 3;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 4;
\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 5;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 6;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 7;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 8;\lsdqformat1 \lsdpriority9 \lsdlocked0 heading 9;
\lsdpriority39 \lsdlocked0 toc 1;\lsdpriority39 \lsdlocked0 toc 2;\lsdpriority39 \lsdlocked0 toc 3;\lsdpriority39 \lsdlocked0 toc 4;\lsdpriority39 \lsdlocked0 toc 5;\lsdpriority39 \lsdlocked0 toc 6;\lsdpriority39 \lsdlocked0 toc 7;
\lsdpriority39 \lsdlocked0 toc 8;\lsdpriority39 \lsdlocked0 toc 9;\lsdqformat1 \lsdpriority35 \lsdlocked0 caption;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority10 \lsdlocked0 Title;\lsdpriority1 \lsdlocked0 Default Paragraph Font;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority11 \lsdlocked0 Subtitle;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority22 \lsdlocked0 Strong;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority20 \lsdlocked0 Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority59 \lsdlocked0 Table Grid;\lsdunhideused0 \lsdlocked0 Placeholder Text;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority1 \lsdlocked0 No Spacing;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 1;\lsdunhideused0 \lsdlocked0 Revision;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority34 \lsdlocked0 List Paragraph;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority29 \lsdlocked0 Quote;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority30 \lsdlocked0 Intense Quote;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 1;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 1;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 2;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 2;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 3;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 3;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 4;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 4;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 5;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 5;\lsdsemihidden0 \lsdunhideused0 \lsdpriority60 \lsdlocked0 Light Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority61 \lsdlocked0 Light List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority62 \lsdlocked0 Light Grid Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority63 \lsdlocked0 Medium Shading 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority64 \lsdlocked0 Medium Shading 2 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority65 \lsdlocked0 Medium List 1 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority66 \lsdlocked0 Medium List 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority67 \lsdlocked0 Medium Grid 1 Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority68 \lsdlocked0 Medium Grid 2 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority69 \lsdlocked0 Medium Grid 3 Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority70 \lsdlocked0 Dark List Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdpriority71 \lsdlocked0 Colorful Shading Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority72 \lsdlocked0 Colorful List Accent 6;\lsdsemihidden0 \lsdunhideused0 \lsdpriority73 \lsdlocked0 Colorful Grid Accent 6;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority19 \lsdlocked0 Subtle Emphasis;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority21 \lsdlocked0 Intense Emphasis;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority31 \lsdlocked0 Subtle Reference;\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority32 \lsdlocked0 Intense Reference;
\lsdsemihidden0 \lsdunhideused0 \lsdqformat1 \lsdpriority33 \lsdlocked0 Book Title;\lsdpriority37 \lsdlocked0 Bibliography;\lsdqformat1 \lsdpriority39 \lsdlocked0 TOC Heading;}}{\*\datastore 010500000200000018000000
4d73786d6c322e534158584d4c5265616465722e352e3000000000000000000000060000
d0cf11e0a1b11ae1000000000000000000000000000000003e000300feff090006000000000000000000000001000000010000000000000000100000feffffff00000000feffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffff52006f006f007400200045006e00740072007900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016000500ffffffffffffffffffffffffec69d9888b8b3d4c859eaf6cd158be0f000000000000000000000000c0d8
5104e051ce01feffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000105000000000000}}